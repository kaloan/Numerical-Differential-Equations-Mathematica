(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     51493,        989]
NotebookOptionsPosition[     50756,        969]
NotebookOutlinePosition[     51120,        985]
CellTagsIndexPosition[     51077,        982]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RK4", "[", 
    RowBox[{"f_", ",", "t0_", ",", "T_", ",", "u0_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        StyleBox[
         RowBox[{"\[LeftCeiling]", 
          FractionBox[
           RowBox[{"T", "-", "t0"}], "h"], "\[RightCeiling]"}], 
         "OperatorCharacter"]}], 
       StyleBox[",", "OperatorCharacter"], 
       StyleBox["t", "OperatorCharacter"], ",", "res", ",", "i", ",", "s", 
       ",", 
       StyleBox["\[IndentingNewLine]", "OperatorCharacter"], 
       RowBox[{"a", "=", 
        RowBox[{"N", "@", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"], ",", "1"}], "}"}]}]}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"N", "@", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"], ",", "1"}], "}"}]}]}], ",", 
       RowBox[{"p", "=", 
        RowBox[{"N", "@", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "3"], ",", 
           FractionBox["1", "6"], ",", 
           FractionBox["1", "6"], ",", 
           FractionBox["1", "3"]}], "}"}]}]}], ",", 
       RowBox[{"k", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "4"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"t0", "+", 
          RowBox[{"k", "*", "h"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"n", "+", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "=", "u0"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"s", "=", "1"}], ",", 
           RowBox[{"s", "\[LessEqual]", "4"}], ",", 
           RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "k", "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}], "=", 
             RowBox[{"h", "*", 
              RowBox[{"f", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "t", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 "+", 
                 RowBox[{
                  RowBox[{
                  "a", "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}],
                   "h"}]}], ",", 
                RowBox[{
                 RowBox[{
                 "res", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "+", 
                 RowBox[{
                  RowBox[{
                  "b", "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}],
                   " ", 
                  RowBox[{"k", "\[LeftDoubleBracket]", 
                   RowBox[{"s", "-", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
               "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"res", "\[LeftDoubleBracket]", 
           RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{
           "res", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "+", 
           RowBox[{"p", ".", "k"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "res"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AB4Droplet", "[", 
   RowBox[{"f_", ",", "s0_", ",", "u0_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"s0", "+", 
          RowBox[{"k", " ", "h"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ",", "coeffs", 
      ",", "func", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{
       RowBox[{"RK4", "[", 
        RowBox[{"f", ",", "s0", ",", 
         RowBox[{"s0", "+", 
          RowBox[{"3", " ", "h"}]}], ",", "u0", ",", "h"}], "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"func", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "res"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"coeffs", "=", 
      RowBox[{"N", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "8"]}], ",", 
         FractionBox["37", "24"], ",", 
         RowBox[{"-", 
          FractionBox["59", "24"]}], ",", 
         FractionBox["55", "24"]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"res", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], "<", 
        "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"s", ",", 
          RowBox[{
           RowBox[{"s", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+", "h"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"res", ",", 
          RowBox[{
           RowBox[{"res", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"coeffs", ".", "func"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"func", "=", 
         RowBox[{"RotateLeft", "[", 
          RowBox[{"func", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "func", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
         
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"s", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"res", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]}],
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s", ",", "res"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.886639761891458*^9, 3.88663985697801*^9}, {
  3.8866399360524263`*^9, 3.8866400371928453`*^9}, {3.886640153457856*^9, 
  3.886640154534322*^9}, {3.886640273449239*^9, 3.886640274959443*^9}, {
  3.886640337848826*^9, 3.886640350249247*^9}, {3.886640544006514*^9, 
  3.886640544251494*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"e3bd1de9-3e8f-4f48-addf-2ec45637e545"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Example", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "=", "1.84366"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"-", "2.9"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"s_", ",", "u_List"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "@", 
        RowBox[{"u", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"Sin", "@", 
        RowBox[{"u", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"s", "\[Equal]", "0"}], ",", "b", ",", 
         RowBox[{
          RowBox[{"2", " ", "b"}], "+", 
          RowBox[{"c", " ", 
           RowBox[{
           "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
          FractionBox[
           RowBox[{"Sin", "@", 
            RowBox[{
            "u", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           RowBox[{
           "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}]}], 
        "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"s0", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"u0", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"h", "=", "0.001"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.886639761891458*^9, 3.886639785454299*^9}, {
  3.886639823903385*^9, 3.8866398709951057`*^9}, {3.88664052556695*^9, 
  3.886640528013536*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"742b1dad-b924-4c74-8046-419b0fe8abf4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Approximation", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "u"}], "}"}], "=", 
    RowBox[{"AB4Droplet", "[", 
     RowBox[{"f", ",", "s0", ",", "u0", ",", "h"}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.886639761891458*^9, 3.886639787930915*^9}, {
  3.8866400565694733`*^9, 3.8866400622421303`*^9}, {3.886640556746401*^9, 
  3.886640564593864*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9a67efba-88c9-432b-852d-0c76e03fcef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"u", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.886639761891458*^9, 3.886639787930915*^9}, {
   3.8866398239078617`*^9, 3.88663983686866*^9}, {3.886640067515525*^9, 
   3.886640087829398*^9}, {3.8866404326034946`*^9, 3.886640465957662*^9}, 
   3.8866404997633743`*^9, {3.886640566949563*^9, 3.886640635987131*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"6482967f-fb32-4575-8b3c-863ce62eee95"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
fVar60JZP0lYPmMcB/S+r63p7oLwloGbkQXj8Gnt/u8omfA/1HL1R8U4ljUS
tibPdKFuwIVHuWkcP07OLggudeFsUFJmVPc48lJO1L9m70bVw63ckyOEv+Zt
zv9t74ZMr5vSYcY4XGrZt4YJd2NuIVf50ew4/Ivj/XYc7saDVcedhQvjONZg
S3p7uhvcfy5TnJjIcGdn5xS93I19Y98FtrORERL+nS9bsxtjWzkUsteTEfus
fPmUaTeULDmuX9xCRv4f1rx2u25szNdSIXGR8Xz1pryhVzfaorUO2OwgwzBf
IXQxqBsvmp1WWAXIGJE1LgqO7sb6VuGiUCEyPn24niyV1o2DQnV3douS0SD6
Xr+1qBuPDrfMpe8nw3eMQbKs74aieoK1zAEyBJbLhbh6u6HVWUEqkyaDtaBW
uJjSDanWALlzsmSQlUIYht+6cUPfw6tenozz8zV3OVa6QX6xtuTCGTJs1iy8
Kd/Qg+4T4eT682QI9zT5P+TpgaV83O9zysT35SOHRPf2IO7C++XyK2QUHWrz
Gz3Sg4erLD9kb5CxLRbB4Wd7cGnq3HCmOhm6IX0Xbl7tgYv1UK6wNhnlr6RT
uXR74DUl7xauR9hTWsrvNe+Bqy9dbp0RGaE3+8wiHXvwxPjKlL0ZGZGOppX6
Pj3Y7jnnT71PhoKnZon4K8JfyeU9V6zJRD9XU1uI7cFCz0h6vj0ZV6qYX9Rn
9SDcWkBSwJmMzIlNeq/LeiDCExDz2J2MjW27W+639KBaMmMDzYsM76iZtnND
PTjzc9n8nC8Zp54JGu/83AP3kJWqWH8yOCfvBv752YO29Yc5/wWRsY/f6sIg
Sy+un+BT13hFRvLb2YBizl7cpZx8lf2ajEsrEXrRgr34+Xpny9poMlgYO0u8
JXvxtf/sklYsGWHcx97cP9ELv+mDohmJZMgbhDJpXOxFI9sD5ZUUMmQqvn1W
VO9F9T5fs0uZZFgcZ7kqY9SLjceYvSNyyfgz531kv00v/qOZRFIKyGiVOBgq
+LgXoTUK6ftLyZA+W2GxPbAXg6eFPj2oIMM85XsJ59teHH/l35RXQ9hffOy+
ObUX5kNb+341kGFKOvBxU1Evpv6cGT/WSnwvXqK5pb4XNwqSJm07yehqpN3n
6u1FU3zfXFYvGaRay6881F5oSGgvTQ2SsU6Zv2f3916oPmti2zNGhuv77N1S
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
XICyoA==
      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->Full,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.0000118718452276`}, {0, 1.4402184835512648`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8866397678726473`*^9, 3.8866403553242702`*^9, {3.88664048048656*^9, 
   3.886640500333753*^9}, 3.8866405837632647`*^9, 3.886640636400262*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"22a1d429-f35c-494e-940e-34f45e9655b8"]
}, Open  ]]
},
WindowSize->{1920, 1012},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7522, 194, 1067, "Input",ExpressionUUID->"e3bd1de9-3e8f-4f48-addf-2ec45637e545"],
Cell[8083, 216, 1682, 47, 250, "Input",ExpressionUUID->"742b1dad-b924-4c74-8046-419b0fe8abf4"],
Cell[9768, 265, 543, 13, 70, "Input",ExpressionUUID->"9a67efba-88c9-432b-852d-0c76e03fcef3"],
Cell[CellGroupData[{
Cell[10336, 282, 719, 14, 70, "Input",ExpressionUUID->"6482967f-fb32-4575-8b3c-863ce62eee95"],
Cell[11058, 298, 39682, 668, 585, "Output",ExpressionUUID->"22a1d429-f35c-494e-940e-34f45e9655b8"]
}, Open  ]]
}
]
*)

